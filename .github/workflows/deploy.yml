name: 5etranslated - Deploy GH Pages

env:
  DEPLOYMENT_LANGUAGE: ${{ vars.DEPLOYMENT_LANGUAGE }}
  DEPLOYED_SHA: ${{vars.DEPLOYED_SHA}}

on:
  workflow_dispatch:
  schedule:
    - cron: "0 1 * * *"

concurrency:
  group: "deploy-gh-page"
  cancel-in-progress: true

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build:
    # Only run if not the backup repository
    if: ${{ ! contains(github.repository, 'backup')}}
    runs-on: ubuntu-latest
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          # this might remove tools that are actually needed,
          # if set to "true" but frees about 6 GB
          tool-cache: false

          # all of these default to true, but feel free to set to
          # "false" if necessary for your workflow
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true

      - uses: actions/checkout@main
        with:
          repository: 5etools-translator-mirror-3/5etools-translator
          ref: "translations"
          fetch-depth: 1
          # Currently a "bug" we will do it manually
          # https://github.com/actions/checkout/issues/1471
          #   fetch-tags: true

      - name: cache buster
        run: |
          cd $GITHUB_WORKSPACE
          git fetch --tags
          VERSION=$(git tag -l --sort=-committerdate | head -n1)
          bash ./.github/set-deployed-flag.sh "${VERSION}.$(date +%s)"

      - name: Switch default lang if necessary
        if: ${{env.DEPLOYMENT_LANGUAGE != 'en' && env.DEPLOYMENT_LANGUAGE !=''}}
        continue-on-error: false
        run: |
          mv data data.en
          mv data.${{ env.DEPLOYMENT_LANGUAGE }} data

      # TODO: The deployment is close to reaching the limit
      # We can use this to not include the image but fetch them from repo but this does not work with plutonium
      # Uncomment when the main 5etools site reaches the same limit and plutonium is updated

      # - name: Point to images from repo
      #   continue-on-error: false
      #   run: |
      #      sed -i -e 's/globalThis.DEPLOYED_IMG_ROOT = undefined/globalThis.DEPLOYED_IMG_ROOT = "https:\/\/raw.githubusercontent.com\/5etools-mirror-1\/5etools-mirror-1.github.io\/master\/"/' js/utils.js
      #      rm -rf img

      - name: Build Service Worker
        run: |
          npm i
          npm run build:sw:prod
          sed -i 's/sw.js//g' .gitignore
          sed -i 's/sw-injector.js//g' .gitignore

      - name: Clean unnecessary files for pages deploy
        run: |
          rm -rf translation
          rm -rf node_modules
          rm -rf data.*
          rm -rf docker
          rm -rf .git
          rm SVGs.zip

      - name: Setup Pages
        uses: actions/configure-pages@master

      - name: Upload artifact
        uses: actions/upload-pages-artifact@master
        with:
          path: "."
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@master
        with:
          timeout: 600000 # Max 10 min
  set_deployed_sha:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - id: set_sha
        run: |
          ACCESS_TOKEN=${{ secrets.ACTIONS_TOKEN }}
          REPO_API_URL="https://api.github.com/repos/${{ github.repository }}"
          VARIABLE_NAME="DEPLOYED_SHA"
          VARIABLE_VALUE=$(git tag -l --sort=-committerdate | head -n1)

          curl -X PUT -H "Authorization: token $ACCESS_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "$REPO_API_URL/actions/variable/$VARIABLE_NAME" \
            -d '{"value": "$VARIABLE_VALUE"}'
